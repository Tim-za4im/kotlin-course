package lesson18.homeWork18

import kotlin.math.roundToInt

fun main() {

    val zoo = listOf(Dog(), Cat(), Bird())
    for (i in zoo){
        i.makeSound()
    }

val cir = Circle2(3.14,5.0)
    println(cir.area())
val squ= Square(5)
    println(squ.area().toInt())

val geometry2 = listOf(
    Circle2(3.14,17.0),
    Square(10),
    Triangle2(4.0,7.8,45.0))
    for (j in geometry2)
        println(String.format("%.2f",j.area()))


    val laserPrinter = LaserPrinter()
    val inkjet= Inkjet()
    val text = "Было очень сложно, но смог вроде сделать"

    println("Лазер:")
    laserPrinter.print(text)

    println("Струйный")
    inkjet.print(text)

    // Создание корзины
    val cart = ShoppingCart()

    // Добавление товаров различными способами
    cart.addInCart(1)
    cart.addInCart(2, 3)
    cart.addInCart(mapOf(3 to 2, 4 to 1))
    cart.addInCart(listOf(5, 6, 7))

    println(cart)

    // Создание логгера
    val logger = Logger()

    // Логирование различными способами
    logger.log("Это информационное сообщение.")
    logger.log("WARNING", "Это предупреждение.")
    logger.log("ERROR", "Это ошибка.")
    logger.log(listOf("Сообщение 1", "Сообщение 2", "Сообщение 3"))
    logger.log(Exception("Это исключение."))
}


























/*Животные и Их Звуки
Базовый класс: Animal с методом makeSound().
Классы наследники: Dog, Cat, Bird.
Базовый метод makeSound() в классе Animal выводит "This animal makes no sound."
Переопределите метод makeSound() в каждом классе-наследнике, чтобы Dog выводил "Bark", Cat - "Meow", Bird - "Tweet". Обогати вывод звуков цветом.
Создайте список животных List<Animal> и вызовите в цикле метод makeSound()


Геометрические Фигуры и Их Площадь
Абстрактный (базовый) класс: Shape с open методом area().
Классы наследники: Circle, Square, Triangle.
Метод area() возвращает 0.0.
Переопределите метод area() в каждом классе-наследнике для расчета площади соответствующей фигуры.
Подсказка: каждый класс должен иметь аргументы конструктора, позволяющие вычислить площадь
(для круга это радиус, для квадрата это сторона, для треугольника это две стороны и угол между ними)
Создай набор геометрических фигур и выведи в цикле их площадь


Принтер
Создай абстрактный принтер, который имеет абстрактный метод печати, принимающий в качестве аргумента строку.
Создай классы наследники: лазерный и струйный
Лазерный принтер должен разбивать фразу на слова по пробелу и выводить каждое слово отдельно чёрными буквами на белом фоне (хорошо работает на тёмной теме)
Струйный принтер должен разбивать фразу на слова по пробелу и выводить каждое слово отдельно цветными буквами на цветном фоне. Слова должны быть разноцветны. Можно сделать список пар с цветом текста и фона и проходить циклически по этому списку при выводе текста. Проверить работу на длинном тексте.
Подумать, как бы вынести в protected метод базового класса общую для обоих классов логику и избавиться от дублирования кода.

Задания для отработки перегрузки методов
Класс “Корзина товаров”: содержит поле словаря из ID товаров и их количества.
Базовый метод addToCart(itemId) добавляет одну единицу товара к уже существующим в корзине.
Выполнить перегрузку addToCart который:
Принимает два аргумента (itemId и количество amount)
Принимает словарь из id и количества и добавляет всё в корзину
Принимает список из id (добавляет по одной единице).
Учесть, что если товар уже есть в корзине, нужно увеличить его количество, если нет - добавить.
Попробуй создать корзину и положить в неё товар разными способами, потом распечатать корзину в консоль.
Переопредели у корзины метод toString для красивого форматирования содержимого таблицы,
включая итоговое количество артикулов и общее количество всего товара в корзине.
Класс “Логгер”: представляет из себя инструмент для вывода информации в консоль с разным префиксами уровня логирования (INFO, WARNING, ERROR, DEBUG)
Базовый метод log(message) выводит в консоль сообщение message с префиксом INFO:
Выполнить перегрузку метода log, который:
Принимает уровень логирования и сообщение. Выводит сообщения типа WARNING жёлтым цветом, а ERROR белым цветом на красном фоне.
Принимает список сообщений и все их выводит с уровнем INFO
Принимает объект типа Exception и выводит его поле message с префиксом уровня ERROR
Попробуй создать логгер и добавить в него сообщения разными способами. Проверь вывод в консоли.
*/