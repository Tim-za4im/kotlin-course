package com.timur.com.timur.kotlincourse

//TIP To <b>Run</b> code, press <shortcut actionId="Run"/> or
// click the <icon src="AllIcons.Actions.Execute"/> icon in the gutter.
//fun main() {

    //Контекст: Вы изучаете физическое явление затухания звука в помещении.
// У вас есть измеренное значение начальной интенсивности звука,
// но из-за ограничений оборудования данные о коэффициенте затухания иногда могут быть неизвестны.
//Задача: Рассчитать предполагаемую интенсивность звука после затухания.
//Интенсивность звука после затухания пропорциональна начальной интенсивности,
//умноженной на коэффициент затухания. Если коэффициент затухания неизвестен, использовать стандартное значение 0.5.



   // val standartCoffient : Double = 0.5 //ide выдает ошибку в строке Unresolved reference, поэтому обьявил переменную заранее
   // soundIntensity ( startIntesity = null, standartCoffient ) //функция с параметрами
   // soundIntensity (startIntesity = 12.7, standartCoffient )}

  //fun soundIntensity ( startIntesity: Double? , standartCoffient:Double=0.5 ) {
     // val  intensity : Double = (startIntesity ?: 0.0) * standartCoffient //интенсивость полсе затухания
    // println(intensity) }



    //Контекст: Клиент оплачивает доставку груза. К стоимости доставки добавляется страховка на груз,
    //которая составляет 0,5% от его стоимости. В случае, если стоимость не указана, то берётся стандартная стоимость в $50
    //Задача: Рассчитать полную стоимость доставки.


//val fullPrice : Double //Полная цена с учетом скидки
//sumPrice(90)
   // sumPrice(null)
//}
//fun sumPrice( num: Int?)
//{
   // val insurance = 0.5 //страховка
   // val sumInsurance = (num ?: 50) * insurance / 100 // вычисление стомойсти страховки
   // val fullPrice = (num ?: 50)+sumInsurance //Полная стоймойсть
   // println (fullPrice)

//Вы проводите метеорологические измерения. Одним из важных показателей является атмосферное давление,
// которое должно быть зафиксировано. Лаборант приносит вам набор показателей, но по пути может что-нибудь потерять.
// Задача - сообщить об ошибке в случае отсутствия показаний атмосферного давления.

